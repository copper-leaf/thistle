# On pushes to dev, or PRs to master or dev, run tests on all supported platforms

name: 'Push/PR to `dev` (Verify Integration)'

on:
  push:
    branches: ['dev']
  pull_request:
    branches: ['dev']

jobs:
  buildCachesOnAll:
    strategy:
      matrix:
        os: ['ubuntu-latest', 'macos-latest']
    name: 'Build on ${{ matrix.os }} JDK 8'
    runs-on: '${{ matrix.os }}'
    steps:
      - uses: 'actions/checkout@v2'
      - run: 'git fetch --prune --unshallow --tags'
      - name: 'Set up JDK 8'
        uses: 'actions/setup-java@v2'
        with:
          distribution: 'adopt'
          java-version: 8
      - name: 'Cache Gradle packages'
        uses: 'actions/cache@v1'
        with:
          path: '~/.gradle/caches'
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: '${{ runner.os }}-gradle'
      - name: 'Assemble with Gradle'
        run: './gradlew assemble --no-daemon --stacktrace'
  testOnAll:
    needs: ['buildCachesOnAll']
    strategy:
      matrix:
        java: [8, 9, 10, 11, 12, 13, 14, 15, 16]
        os: ['ubuntu-latest', 'macos-latest']
    name: 'Test on ${{ matrix.os }} JDK ${{ matrix.java }}'
    runs-on: '${{ matrix.os }}'
    steps:
      - uses: 'actions/checkout@v2'
      - run: 'git fetch --prune --unshallow --tags'
      - name: 'Set up JDK ${{ matrix.java }}'
        uses: 'actions/setup-java@v2'
        with:
          distribution: 'adopt'
          java-version: '${{ matrix.java }}'
      - name: 'Cache Gradle packages'
        uses: 'actions/cache@v1'
        with:
          path: '~/.gradle/caches'
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: '${{ runner.os }}-gradle'
      - name: 'Run checks with Gradle'
        run: './gradlew check --no-daemon --stacktrace'
